Here's a **complete command-wise guide** to managing **IP address, subnet, gateway, routing, and DNS** on **Linux** using `ip`, `nmcli`, and file-based configuration. This is useful for Ubuntu, Debian, CentOS, RHEL, and similar distributions.

---

## üßæ 1. **IP Address Management (Temporary)**

### ‚ûï Add IP address and subnet:

``` 
sudo ip addr add 192.168.1.100/24 dev eth0
```

### ‚ûñ Delete IP address:

``` 
sudo ip addr del 192.168.1.100/24 dev eth0
```

### üîç Show IP addresses:

``` 
ip addr show
```

---

## üåê 2. **Set Default Gateway**

### ‚ûï Add default gateway:

``` 
sudo ip route add default via 192.168.1.1
```

### ‚ûñ Delete default gateway:

``` 
sudo ip route del default
```

### üîç View routing table:

``` 
ip route show
```

---

## üåç 3. **Routing ‚Äì Static Route Management**

### ‚ûï Add static route:

``` 
sudo ip route add 10.10.10.0/24 via 192.168.1.1 dev eth0
```

### ‚ûñ Delete static route:

``` 
sudo ip route del 10.10.10.0/24
```

---

## üîÑ 4. **Bring Interface Up/Down**

``` 
sudo ip link set dev eth0 up     # Enable interface
sudo ip link set dev eth0 down   # Disable interface
```

---

## üîÑ 5. **Assign IP Address Permanently**

### üîß Ubuntu/Debian ‚Äì via Netplan:

``` 
sudo nano /etc/netplan/01-netcfg.yaml
```

#### Example:

```yaml
network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      dhcp4: no
      addresses: [192.168.1.100/24]
      gateway4: 192.168.1.1
      nameservers:
        addresses: [8.8.8.8, 1.1.1.1]
```

### üîÉ Apply:

``` 
sudo netplan apply
```

---

### üîß RHEL/CentOS ‚Äì via ifcfg file:

``` 
sudo nano /etc/sysconfig/network-scripts/ifcfg-eth0
```

#### Example:

```
DEVICE=eth0
BOOTPROTO=static
ONBOOT=yes
IPADDR=192.168.1.100
NETMASK=255.255.255.0
GATEWAY=192.168.1.1
DNS1=8.8.8.8
```

### üîÉ Apply:

``` 
sudo systemctl restart network
```

---

## üß≠ 6. **DNS Configuration**

### üõ† Modify resolv.conf (temporary):

``` 
sudo nano /etc/resolv.conf
```

#### Add:

```
nameserver 8.8.8.8
nameserver 1.1.1.1
```

> ‚ö†Ô∏è Changes will be overwritten unless managed by `netplan`, `NetworkManager`, or `systemd-resolved`.

---

## üì° 7. **DHCP ‚Äì Get IP Automatically**

### Start DHCP client:

``` 
sudo dhclient eth0
```

---

## üîß 8. **Using `nmcli` (NetworkManager CLI)**

### ‚ûï Set static IP:

``` 
sudo nmcli con mod eth0 ipv4.addresses 192.168.1.100/24
sudo nmcli con mod eth0 ipv4.gateway 192.168.1.1
sudo nmcli con mod eth0 ipv4.dns "8.8.8.8 1.1.1.1"
sudo nmcli con mod eth0 ipv4.method manual
sudo nmcli con up eth0
```

### ‚ûï Set DHCP:

```
sudo nmcli con mod eth0 ipv4.method auto
sudo nmcli con up eth0
```

---

## üßº 9. **Flush IP / Routing Tables (Reset)**

``` 
sudo ip addr flush dev eth0
sudo ip route flush dev eth0
```

---

## ‚úÖ 10. **Verification Commands**

| Task                   | Command                    |
| ---------------------- | -------------------------- |
| Show IPs               | `ip addr show`             |
| Show routes            | `ip route show`            |
| Show DNS (systemd)     | `systemd-resolve --status` |
| Show active interfaces | `nmcli dev show`           |
| Ping test              | `ping 8.8.8.8`             |

---

Would you like a **PDF/Markdown** version of this for your documentation or training use?
